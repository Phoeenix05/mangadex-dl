/// Generated by https://quicktype.io
use serde::{Deserialize, Serialize};
extern crate serde_json;

#[derive(Serialize, Deserialize, Debug)]
pub struct Feed {
    #[serde(rename = "result")]
    result: String,

    #[serde(rename = "response")]
    response: String,

    #[serde(rename = "data")]
    data: Vec<Datum>,

    #[serde(rename = "limit")]
    limit: i64,

    #[serde(rename = "offset")]
    offset: i64,

    #[serde(rename = "total")]
    total: i64,
}

#[derive(Serialize, Deserialize, Debug)]
pub struct Datum {
    #[serde(rename = "id")]
    id: String,

    #[serde(rename = "type")]
    datum_type: String,

    #[serde(rename = "attributes")]
    attributes: Attributes,

    #[serde(rename = "relationships")]
    relationships: Vec<Relationship>,
}

#[derive(Serialize, Deserialize, Debug)]
pub struct Attributes {
    #[serde(rename = "volume")]
    volume: Option<String>,

    #[serde(rename = "chapter")]
    chapter: String,

    #[serde(rename = "title")]
    title: Option<String>,

    #[serde(rename = "translatedLanguage")]
    translated_language: String,

    #[serde(rename = "externalUrl")]
    external_url: Option<serde_json::Value>,

    #[serde(rename = "publishAt")]
    publish_at: String,

    #[serde(rename = "readableAt")]
    readable_at: String,

    #[serde(rename = "createdAt")]
    created_at: String,

    #[serde(rename = "updatedAt")]
    updated_at: String,

    #[serde(rename = "pages")]
    pages: i64,

    #[serde(rename = "version")]
    version: i64,
}

#[derive(Serialize, Deserialize, Debug)]
pub struct Relationship {
    #[serde(rename = "id")]
    id: String,

    #[serde(rename = "type")]
    relationship_type: Type,
}

#[derive(Serialize, Deserialize, Debug)]
pub enum Type {
    #[serde(rename = "manga")]
    Manga,

    #[serde(rename = "scanlation_group")]
    ScanlationGroup,

    #[serde(rename = "user")]
    User,
}
